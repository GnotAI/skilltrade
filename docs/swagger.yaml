openapi: 3.0.0
info:
  title: SkillTrade API
  description: API documentation for skill trade backend endpoints
  version: 1.0.0

servers:
  - url: http://localhost:3080
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /docs/swagger:
    get:
      summary: Swagger UI
      description: Serves the Swagger UI for API documentation
      tags:
      - Documentation
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Swagger UI Loaded
          schema:
            type: string

  /auth/signup:
    post:
      summary: Register a new user
      description: Creates a new user account.
      tags: 
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  example: "johndoe@example.com"
                password:
                  type: string
                  format: password
                  example: "StrongPass123!"
      responses:
        "201":
          description: User successfully created
        "400":
          description: Invalid input
        "500":
          description: Internal server error

  /auth/signin:
    post:
      summary: Authenticate user and issue a JWT
      description: Logs in a user, returning a JWT in the Authorization header.
      tags: 
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "johndoe@example.com"
                password:
                  type: string
                  format: password
                  example: "StrongPass123!"
      responses:
        "200":
          description: Successfully authenticated
          headers:
            Authorization:
              description: JWT token issued for authentication
              schema:
                type: string
                example: "Bearer eyJhbGciOiJIUzI1NiIs..."
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIs..."
        "401":
          description: Invalid credentials
        "500":
          description: Internal server error

  /auth/refresh:
    post:
      summary: Refresh JWT token
      description: Refreshes the authentication token if a valid token is present in the Authorization header.
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successfully refreshed token
          headers:
            Authorization:
              description: New JWT token issued for authentication
              schema:
                type: string
                example: "Bearer eyJhbGciOiJIUzI1NiIs..."
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIs..."
        "401":
          description: Unauthorized (Invalid or expired token)
        "500":
          description: Internal server error

  /users/skill:
    post:
      summary: Add a new skill to a user
      description: Assigns a skill to the authenticated user.
      security:
        - BearerAuth: []
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skill_id:
                  type: string
                  format: uuid
                  example: "d14db7e0-5e4a-4eb9-bb61-5d1df47d32c5"
      responses:
        201:
          description: Skill successfully added to user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Skill added successfully"
        400:
          description: Invalid request body
        401:
          description: Unauthorized - missing or invalid token
        500:
          description: Internal server error

  /skills:
    get:
      summary: Retrieve all available skills
      description: Returns a list of skills available in the system.
      tags:
        - Skills
      responses:
        200:
          description: List of skills
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      example: "b71f2f48-7185-4d4f-b7a9-86e8d18e8f02"
                    name:
                      type: string
                      example: "Web Development"
        500:
          description: Internal server error

  /trades:
    post:
      summary: Create a new trade request
      description: Creates a new trade request between the sender (identified by the token) and the receiver (provided in the request body).
      tags:
        - Trade
      security:
        - bearerAuth: []
      operationId: CreateTrade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                receiverID:
                  type: string
                  format: uuid
                  description: The UUID of the user receiving the trade request
                senderSkillID:
                  type: string
                  format: uuid
                  description: The UUID of the skill the sender is offering
                receiverSkillID:
                  type: string
                  format: uuid
                  description: The UUID of the skill the receiver is offering
              required:
                - receiverID
                - senderSkillID
                - receiverSkillID
      responses:
        '201':
          description: Successfully created trade request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Trade request created successfully"
        '400':
          description: Bad request, invalid data or skill status
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Sender's skill is not marked as 'offering'"
        '401':
          description: Unauthorized, invalid token
        '409':
          description: Conflict, pending trade request already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "A pending trade request already exists"
        '500':
          description: Internal server error, something went wrong on the server
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error. Please try again later."
              
  /trades/{id}:
    patch:
      summary: Accept or reject a trade request
      description: Allows the receiver (verified by token) to accept or reject a trade request.
      operationId: updateTradeStatus
      tags:
        - Trade
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the trade request to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [accepted, rejected]
                  description: The new status of the trade request (either "accepted" or "rejected")
              required:
                - status
      responses:
        '200':
          description: Successfully updated trade request status
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Trade request accepted"
        '400':
          description: Bad request, invalid status
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid status value. Must be 'accepted' or 'rejected'."
        '401':
          description: Unauthorized, invalid token or receiver not authorized
        '404':
          description: Trade request not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Trade request not found"
        '409':
          description: Conflict, trade request status is already the same
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Trade request has already been accepted or rejected"
        '500':
          description: Internal server error, something went wrong on the server
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error. Please try again later."
